# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'loadData.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import MySQLdb as mdb
import ast
from PyQt5 import QtCore, QtGui, QtWidgets


def MyConverter(myData):
    def cvt(data):
        try:
            return ast.literal_eval(data)

        except Exception:
            return str(data)
        return tuple(map(cvt, myData))


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(1058, 659)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setRowCount(15)
        self.tableWidget.setColumnCount(8)
        self.tableWidget.setObjectName("tableWidget")
        self.verticalLayout.addWidget(self.tableWidget)
        self.loadButton = QtWidgets.QPushButton(Dialog)
        self.loadButton.setObjectName("loadButton")
        self.loadButton.clicked.connect(self.loadData)
        self.verticalLayout.addWidget(self.loadButton)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.loadButton.setText(_translate("Dialog", "Load Data"))

    def loadData(self):
        db = mdb.connect(host='localhost', user='root',
                         password='Alexandria0!', database='dealership')

        with db:
            cur = db.cursor()
            row = cur.execute("select * from cars")
            data = cur.fetchall()

            for row in data:
                self.addTable(MyConverter(row))

            cur.close()

    def addTable(self, columns):
        self.tableWidget.setRowCount(0)
        rowPosition = self.tableWidget.rowCount()
        self.tableWidget.insertRow(rowPosition)

        for i, column in enumerate(columns):
            self.tableWidget.setItem(rowPosition, i, QtWidgets.QTableWidgetItem(str(column)))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
